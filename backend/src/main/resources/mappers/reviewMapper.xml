<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honeystone.review.model.dao.ReviewDao">

	<!-- 전체 댓글 조회 -->
	<select id="countReviews" resultType="long" parameterType="Long">
		SELECT COUNT(*)
		FROM reviews
		WHERE video_id = #{videoId}
		AND deleted_at IS NULL
	</select>

	<select id="getReviewList" resultType="Review" parameterType="map">
		SELECT *
		FROM reviews
		WHERE video_id = #{videoId}
		AND deleted_at IS NULL
		ORDER BY created_at DESC
		LIMIT #{pageable.pageSize}
		OFFSET #{pageable.offset}
	</select>

	<!--댓글 생성 -->
	<insert id="createReview" parameterType="Review">
		INSERT INTO reviews(content, created_at, user_id, video_id)
		VALUES(#{content}, NOW(), #{userId}, #{videoId})
	</insert>

	<!--id로 댓글 존재 확인 -->
	<select id="existsById" parameterType="Long" resultType="Review">
		SELECT *
		FROM reviews
		WHERE id = #{reviewId}
		AND deleted_at IS NULL
	</select>

	<!-- 댓글 수정 -->
	<update id="updatedReview" parameterType = "Review">
		UPDATE reviews
		SET content = #{content}, updated_at = NOW()
		WHERE id = #{id}
	</update>

	<!-- 댓글 논리 삭제 -->
	<update id="deleteReview" parameterType="Long">
		UPDATE reviews
		SET deleted_at = NOW()
		WHERE id = #{id}
	</update>


	<select id="findReviewsToDelete" resultType="Review">
		<![CDATA[
        SELECT *
        FROM reviews
        WHERE deleted_at IS NOT NULL
          AND DATE_ADD(deleted_at, INTERVAL 30 DAY) <= CURRENT_DATE
    ]]>
	</select>

	<!--논리 삭제 테스트용 -->
<!--	<select id="findReviewsToDelete" resultType="Review">-->
<!--            <![CDATA[-->
<!--            SELECT *-->
<!--            FROM reviews-->
<!--            WHERE deleted_at IS NOT NULL-->
<!--              AND DATE_ADD(deleted_at, INTERVAL 1 MINUTE) <= NOW()-->
<!--        ]]>-->
<!--	</select>-->


	<!-- 댓글 영구 삭제 -->
	<delete id="completeDeleteReview" parameterType="Long">
		DELETE FROM reviews
		WHERE id = #{id}
	</delete>

</mapper>